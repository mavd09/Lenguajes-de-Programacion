/// funcion principal
MAIN_FUNCTION -> FUNCTIONS_ADT funcion_principal BLOCK_INSTRUCTIONS fin_principal FUNCTIONS_ADT
FUNCTIONS_ADT -> FUNCTION_DECLARATION FUNCTIONS_ADT
FUNCTIONS_ADT -> ADT FUNCTIONS_ADT
FUNCTIONS_ADT -> epsilon
/// parametros funcion
PARAMETERS -> DATATYPE id END_PARAMETER
END_PARAMETER  -> tk_coma DATATYPE id END_PARAMETER
END_PARAMETER  -> epsilon
///declaracion de funciones
FUNCTION_DECLARATION -> funcion DATATYPE id tk_par_izq PARAMETERS tk_par_der hacer BLOCK_INSTRUCTIONS retornar EXPRESSION1 tk_pyc fin_funcion
///imprimir
PRINT -> imprimir tk_par_izq EXPRESSION1 MORE tk_par_der tk_pyc
MORE  -> tk_coma EXPRESSION1 MORE
MORE  -> epsilon
/// leer
READ -> leer tk_par_izq ID tk_par_der tk_pyc
/// id
ID  -> id ID_
ID_ -> tk_punto id ID_
ID_ -> epsilon

ID2  -> tk_punto id ID2_
ID2_ -> tk_punto id ID2_
ID2_ -> epsilon
/// asignaciones y llamado de funciones
A -> PRIMITIVE_DATATYPE VARIABLE_DECLARATION
A -> id A_
A_ -> ID2 VALUE_ASSIGNMENT
A_ -> VALUE_ASSIGNMENT
A_ -> CALL_FUNCTION
A_ -> VARIABLE_DECLARATION
/// creación variables
VARIABLE_DECLARATION  -> VAR END_VAR_DECLARATION
END_VAR_DECLARATION  -> tk_coma VAR END_VAR_DECLARATION
END_VAR_DECLARATION -> tk_pyc
VAR    -> id ASSIGN_VALUE
ASSIGN_VALUE -> epsilon
ASSIGN_VALUE -> tk_asig EXPRESSION1
DATATYPE  -> PRIMITIVE_DATATYPE
DATATYPE  -> id
PRIMITIVE_DATATYPE  -> entero
PRIMITIVE_DATATYPE  -> real
PRIMITIVE_DATATYPE  -> caracter
PRIMITIVE_DATATYPE  -> cadena
/// asignaciones
VALUE_ASSIGNMENT -> tk_asig EXPRESSION1 tk_pyc
/// llamado de funciones
CALL_FUNCTION -> tk_par_izq PARAMETERS tk_par_der tk_pyc
PARAMETERS    -> EXPRESSION1 PARAMETERS_
PARAMETERS    -> epsilon
PARAMETERS_   -> tk_coma EXPRESSION1 PARAMETERS_
PARAMETERS_   -> epsilon
///Condicionales ---> Pendiente
IF_CONDITIONAL  -> si tk_par_izq EXPRESSION1 tk_par_der entonces BLOCK_INSTRUCTIONS IF_CONDITIONAL_
IF_CONDITIONAL_ -> fin_si
IF_CONDITIONAL_ -> si_no BLOCK_INSTRUCTIONS fin_si
/// seleccion multiple
SWITCH_CASE  -> seleccionar tk_par_izq ID tk_par_der entre SWITCH_CASE_ defecto tk_dosp fin_seleccionar
SWITCH_CASE_ -> caso EXPRESSION1 tk_dosp BLOCK_INSTRUCTIONS SWITCH_CASE_
/// CICLO MIENTRAS
LOOP_WHILE -> mientras tk_par_izq EXPRESSION1 tk_par_der hacer BLOCK_INSTRUCTIONS fin_mientras
/// CICLO LOOP_HACER-MIENTRAS
LOOP_DO_WHILE -> hacer BLOCK_INSTRUCTIONS mientras tk_par_izq EXPRESSION1 tk_par_der tk_pyc
/// CICLO LOOP_FOR
LOOP_FOR  -> para tk_par_izq LOOP_FOR1 tk_pyc LOOP_FOR2 tk_pyc LOOP_FOR3 tk_par_der hacer BLOCK_INSTRUCTIONS fin_para
LOOP_FOR1 -> PRIMITIVE_DATATYPE id tk_asig EXPRESSION1
LOOP_FOR1 -> id LOOP_FOR1_
LOOP_FOR1_ -> id tk_asig EXPRESSION1
LOOP_FOR1_ -> tk_asig EXPRESSION1
LOOP_FOR2 -> EXPRESSION1
LOOP_FOR2 -> epsilon
LOOP_FOR3 -> LOOP_FOR2
/// Bloque
BLOCK_INSTRUCTIONS -> PRINT BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> READ BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> A BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> IF_CONDITIONAL BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> SWITCH_CASE BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> LOOP_WHILE BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> LOOP_FOR BLOCK_INSTRUCTIONS
BLOCK_INSTRUCTIONS -> epsilon
/// Declaracion de TDA
ADT  -> estructura id DATATYPE VARIABLE_DECLARATION ADT_ fin_estructura
ADT_ -> DATATYPE VARIABLE_DECLARATION ADT_
ADT_ -> epsilon
/// expresion
EXPRESSION1  -> TERM EXPRESSION1_
EXPRESSION1_ -> tk_y TERM EXPRESSION1_
EXPRESSION1_ -> tk_o TERM EXPRESSION1_
EXPRESSION1_ -> EXPRESSION2_
EXPRESSION2_ -> tk_igual TERM EXPRESSION1_
EXPRESSION2_ -> tk_dif TERM EXPRESSION1_
EXPRESSION2_ -> EXPRESSION3_
EXPRESSION3_ -> tk_menor TERM EXPRESSION1_
EXPRESSION3_ -> tk_mayor TERM EXPRESSION1_
EXPRESSION3_ -> tk_menor_igual TERM EXPRESSION1_
EXPRESSION3_ -> tk_mayor_igual TERM EXPRESSION1_
EXPRESSION3_ -> EXPRESSION4_
EXPRESSION4_ -> tk_mas TERM EXPRESSION1_
EXPRESSION4_ -> tk_menos TERM EXPRESSION1_
EXPRESSION4_ -> EXPRESSION5_
EXPRESSION5_ -> tk_mult TERM EXPRESSION1_
EXPRESSION5_ -> tk_mod TERM EXPRESSION1_
EXPRESSION5_ -> tk_div TERM EXPRESSION1_
EXPRESSION5_ -> epsilon
TERM           -> tk_par_izq EXPRESSION1 tk_par_der
TERM           -> CONSTANT
TERM           -> ID
TERM           -> verdadero
TERM           -> falso
TERM           -> tk_menos TERM
TERM           -> tk_mas TERM
TERM           -> tk_neg TERM
///constantes
CONSTANT -> tk_entero
CONSTANT -> tk_real
CONSTANT -> tk_caracter
CONSTANT -> tk_cadena
